// Code generated by mockery v2.15.0. DO NOT EDIT.

package udgermocks

import (
	net "net"

	mock "github.com/stretchr/testify/mock"

	udger "github.com/msales/udger"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Lookup provides a mock function with given fields: ua
func (_m *Client) Lookup(ua string) (*udger.Info, error) {
	ret := _m.Called(ua)

	var r0 *udger.Info
	if rf, ok := ret.Get(0).(func(string) *udger.Info); ok {
		r0 = rf(ua)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*udger.Info)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(ua)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LookupIP provides a mock function with given fields: ip
func (_m *Client) LookupIP(ip net.IP) (*udger.IPInfo, error) {
	ret := _m.Called(ip)

	var r0 *udger.IPInfo
	if rf, ok := ret.Get(0).(func(net.IP) *udger.IPInfo); ok {
		r0 = rf(ip)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*udger.IPInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(net.IP) error); ok {
		r1 = rf(ip)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewClient creates a new instance of Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewClient(t mockConstructorTestingTNewClient) *Client {
	mock := &Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
